# This file is meant to provide a set of build commands
# for this project in windows, using mingw-make and gcc compiler


###############################################################################
# Files and directories
###############################################################################

BUILD_DIR := ./build
SRC_DIR := ./src
MINGW_LOC := C:/msys64/mingw64
RELEASE_DIR := .\release
ASSET_DIR := .\assets


# Find all .c files to be built as part of project
# NOTE: I'm not sure what versions of GNU Make support the **/* syntax.
# perhaps I will later identify an alternative just in case, but for now this
# works so eh
SRCS := $(wildcard $(SRC_DIR)/**/*.c)
SRCS += $(wildcard $(SRC_DIR)/*.c)
RELEASE_SRCS := $(SRCS) main.c

OBJS := $(patsubst %.c,$(BUILD_DIR)/%.o,$(SRCS))

# Flags NOTE: requires SDL headers to exist in msys64/mingw32/include folder
INC_DIRS := $(sort $(dir $(wildcard $(SRC_DIR)/*/)))
INC_DIRS += $(MINGW_LOC)/include/

INC_FLAGS := $(addprefix -I,$(INC_DIRS))

SDL_MODULES := SDL2 SDL2_ttf SDL2_mixer
SDL_LOC := $(MINGW_LOC)/lib

SDL_FLAGS := $(addprefix -l,$(SDL_MODULES))

# .exe for windows, no need for an extension on linux
EXE_FILE := main.exe
RELEASE_EXE_FILE := $(RELEASE_DIR)/sirtet.exe
LIB_FILE := $(BUILD_DIR)/libsirtet.a


COMPILER := gcc
COMP_FLAGS := -Wall -Werror -g
RELEASE_FLAGS := -Wall -Werror -mwindows


###############################################################################
# Makefile entry points
###############################################################################

run_exe: $(EXE_FILE)
	./$(EXE_FILE)

# clear out everything compiled/built from Makefile(s) for release
reset:
	if exist "$(RELEASE_DIR)" rmdir /s /q "$(RELEASE_DIR)"
	if not exist "$(RELEASE_DIR)" mkdir "$(RELEASE_DIR)"


build_lib: $(LIB_FILE)

build_exe: $(EXE_FILE)


build_release: reset $(RELEASE_EXE_FILE)
	if not exist "$(RELEASE_DIR)\$(ASSET_DIR)" mkdir "$(RELEASE_DIR)\$(ASSET_DIR)" 
	xcopy $(ASSET_DIR) $(RELEASE_DIR)\$(ASSET_DIR) /S

###############################################################################
# Builds
###############################################################################


$(EXE_FILE): main.c $(LIB_FILE)
	$(COMPILER) $(COMP_FLAGS) main.c -o $@ $(INC_FLAGS) -L$(BUILD_DIR) -L$(SDL_LOC) -lsirtet $(SDL_FLAGS) 


# build static library
$(LIB_FILE): $(OBJS)
	ar rcs $@ $(OBJS)


# any *.o pattern match in build dir requires equivalent *.c file, routed from
# root folder - this will create a mirror of source directory structure in
# build
$(BUILD_DIR)/%.o: %.c
# NOTE: windows uses `if not exist` syntax, linux can use -p flag
	if not exist $(dir $@) mkdir "$(dir $@)"
	gcc -Wall -c $< -o $@ $(INC_FLAGS) -L$(BUILD_DIR) $(SDL_FLAGS)
	$(COMPILER) $(COMP_FLAGS) -c $< -o $@ $(INC_FLAGS) -L$(BUILD_DIR) $(SDL_FLAGS)

$(RELEASE_EXE_FILE): $(RELEASE_SRCS)
	if not exist "$(dir $@)" mkdir "$(dir $@)"
	$(COMPILER) $(RELEASE_FLAGS) $^ -o $@ $(INC_FLAGS) -L$(SDL_LOC) $(SDL_FLAGS)